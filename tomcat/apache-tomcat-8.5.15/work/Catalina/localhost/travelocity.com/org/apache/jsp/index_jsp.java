/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.15
 * Generated at: 2017-05-19 17:25:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.wso2.carbon.identity.sso.agent.util.SSOAgentConfigs;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.wso2.carbon.identity.sso.agent.util.SSOAgentConfigs");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!--\n");
      out.write("~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n");
      out.write("~\n");
      out.write("~ WSO2 Inc. licenses this file to you under the Apache License,\n");
      out.write("~ Version 2.0 (the \"License\"); you may not use this file except\n");
      out.write("~ in compliance with the License.\n");
      out.write("~ You may obtain a copy of the License at\n");
      out.write("~\n");
      out.write("~    http://www.apache.org/licenses/LICENSE-2.0\n");
      out.write("~\n");
      out.write("~ Unless required by applicable law or agreed to in writing,\n");
      out.write("~ software distributed under the License is distributed on an\n");
      out.write("~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n");
      out.write("~ KIND, either express or implied.  See the License for the\n");
      out.write("~ specific language governing permissions and limitations\n");
      out.write("~ under the License.\n");
      out.write("-->\n");
      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n");
      out.write("\"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/cart-styles.css\">\n");
      out.write("    <title>User Logged out</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"container\">\n");
      out.write("    <div id=\"header-area\">\n");
      out.write("        <img src=\"images/cart-logo.gif\" alt=\"Logo\" vspace=\"10\" />\n");
      out.write("    </div>\n");
      out.write("    <div id=\"content-area\">\n");
      out.write("        <div class=\"cart-tabs\">\n");
      out.write("            <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n");
      out.write("                <tr>\n");
      out.write("                    <td class=\"cart-tab-left\"><img src=\"images/cart-tab-left.gif\"\n");
      out.write("                                                   alt=\"-\"></td>\n");
      out.write("                    <td class=\"cart-tab-mid\"><a>Home</a></td>\n");
      out.write("                    <td class=\"cart-tab-right\"><img\n");
      out.write("                            src=\"images/cart-tab-right.gif\" alt=\"-\"></td>\n");
      out.write("                </tr>\n");
      out.write("            </table>\n");
      out.write("        </div>\n");
      out.write("        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"cart-expbox\">\n");
      out.write("            <tr>\n");
      out.write("                <td><img src=\"images/cart-expbox-01.gif\" alt=\"-\"></td>\n");
      out.write("                <td class=\"cart-expbox-02\">&nbsp</td>\n");
      out.write("                <td><img src=\"images/cart-expbox-03.gif\" alt=\"-\"></td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <td class=\"cart-expbox-08\">&nbsp</td>\n");
      out.write("                <td class=\"cart-expbox-09\">\n");
      out.write("                    <!--all content for cart and links goes here-->\n");
      out.write("                </td>\n");
      out.write("                <td class=\"cart-expbox-04\">&nbsp</td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <td><img src=\"images/cart-expbox-07.gif\" alt=\"-\"></td>\n");
      out.write("                <td class=\"cart-expbox-06\">&nbsp</td>\n");
      out.write("                <td><img src=\"images/cart-expbox-05.gif\" alt=\"-\"></td>\n");
      out.write("            </tr>\n");
      out.write("\n");
      out.write("        </table>\n");
      out.write("        <h1>Travelocity.COM</h1>\n");
      out.write("        <hr />\n");
      out.write("        <a href=\"../avis.com\"> Avis.COM </a>\n");
      out.write("        <div class=\"product-box\">\n");
      out.write("            <h2>Click <a href=\"samlsso\">here</a> to login with <img src=\"images/saml2-logo.png\" height=\"22\" width=\"60\"/> from <img src=\"images/identity_logo.gif\" height=\"20\" width=\"120\"/></h2>\n");
      out.write("            <hr/>\n");
      out.write("            <h2>Click <a href=\"openid?claimed_id=");
      out.print(SSOAgentConfigs.getOpenIdProviderUrl());
      out.write("\">here</a> to login with <img src=\"images/openid-logo.svg\" height=\"20\" width=\"55\"/> from <img src=\"images/identity_logo.gif\" height=\"20\" width=\"120\"/></h2>\n");
      out.write("            <hr/>\n");
      out.write("            <h2>Click <a href=\"openid?claimed_id=https://www.google.com/accounts/o8/id\">here</a> to login with <img src=\"images/google-openid.png\" height=\"20\" width=\"75\"/></h2>\n");
      out.write("            <hr/>\n");
      out.write("            <h2>Click <a href=\"openid?claimed_id=http://myopenid.com\">here</a> to login with <img src=\"images/myopenid-logo.png\" height=\"20\" width=\"75\"/></h2>\n");
      out.write("            <hr/>\n");
      out.write("            <fieldset>\n");
      out.write("                <legend>Login with your Claimed OpenID URI</legend>\n");
      out.write("                <form action=\"openid\" method=\"post\">\n");
      out.write("                    <div align=\"center\">\n");
      out.write("                        <input type=\"text\" name=\"claimed_id\" size=\"30\"/> <input type=\"submit\" name=\"login\" value=\"Login\"/>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </fieldset>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <div id=\"footer-area\">\n");
      out.write("        <p>Â©2013 WSO2</p>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
